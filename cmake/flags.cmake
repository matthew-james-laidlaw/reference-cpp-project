include(${CMAKE_CURRENT_LIST_DIR}/utilities.cmake)

assign_bool(IS_CLANG_GNU CMAKE_CXX_COMPILER_ID STREQUAL "Clang" AND CMAKE_CXX_COMPILER_FRONTEND_VARIANT STREQUAL "GNU")
assign_bool(IS_CLANG_MSVC CMAKE_CXX_COMPILER_ID STREQUAL "Clang" AND CMAKE_CXX_COMPILER_FRONTEND_VARIANT STREQUAL "MSVC")
assign_bool(IS_GNU CMAKE_CXX_COMPILER_ID STREQUAL "GNU")
assign_bool(IS_MSVC CMAKE_CXX_COMPILER_ID STREQUAL "MSVC")

if(IS_CLANG_GNU)

    set(FLAG_ENABLE_ALL_WARNINGS -Wall -Wextra)
    set(FLAG_WARNINGS_AS_ERRORS -Werror)
    set(FLAG_ZERO_OPTIMIZATION -O0)
    set(FLAG_MAX_OPTIMIZATION -O2)

elseif(IS_GNU)

    set(FLAG_ENABLE_ALL_WARNINGS -Wall -Wextra)
    set(FLAG_WARNINGS_AS_ERRORS -Werror)
    set(FLAG_ZERO_OPTIMIZATION -O0)
    set(FLAG_MAX_OPTIMIZATION -O2)

elseif(IS_MSVC OR IS_CLANG_MSVC)

    set(FLAG_ENABLE_ALL_WARNINGS /W4)
    set(FLAG_WARNINGS_AS_ERRORS /WX)
    set(FLAG_ZERO_OPTIMIZATION /Od)
    set(FLAG_MAX_OPTIMIZATION /O2)

endif()

set(BASE_FLAGS ${FLAG_ENABLE_ALL_WARNINGS} ${FLAG_WARNINGS_AS_ERRORS})
set(DEBUG_FLAGS ${BASE_FLAGS} ${FLAG_ZERO_OPTIMIZATION})
set(RELEASE_FLAGS ${BASE_FLAGS} ${FLAG_MAX_OPTIMIZATION})
