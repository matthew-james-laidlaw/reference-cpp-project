name: cicd

on: [ push, pull_request, workflow_dispatch ]

jobs:
  build:
    name: ${{ matrix.name }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - { name: arm64-linux-clang,   runs_on: ubuntu-24.04-arm }
          - { name: arm64-linux-gnu,     runs_on: ubuntu-24.04-arm }
          - { name: arm64-macos-clang,   runs_on: macos-15         }
          - { name: arm64-windows-clang, runs_on: windows-11-arm   }
          - { name: arm64-windows-msvc,  runs_on: windows-11-arm   }
          - { name: x64-linux-clang,     runs_on: ubuntu-24.04     }
          - { name: x64-linux-gnu,       runs_on: ubuntu-24.04     }
          - { name: x64-apple-clang,     runs_on: macos-14         }
          - { name: x64-windows-clang,   runs_on: windows-2025     }
          - { name: x64-windows-msvc,    runs_on: windows-2025     }

    runs-on: ${{ matrix.runs_on }}

    steps:

      - uses: actions/checkout@v4
      
      - name: Set VCPKG_ROOT
        shell: bash
        run: echo "VCPKG_ROOT=$VCPKG_INSTALLATION_ROOT" >> "$GITHUB_ENV"

      - name: Configure ${{ matrix.name }}
        run: cmake --preset ${{ matrix.name }}

      - name: Build ${{ matrix.name }}
        run: cmake --build build/${{ matrix.name }} --config Release --parallel

      - name: Test ${{ matrix.name }}
        run: ctest --test-dir build/${{ matrix.name }} --build-config Release --parallel

      - name: Package ${{ matrix.name }}
        run: cpack -G ZIP --config build/${{ matrix.name }}/CPackConfig.cmake -B artifacts/${{ matrix.name }} -C Release

      - name: Upload (${{ matrix.name }})
        uses: actions/upload-artifact@v4
        with:
          name: ${{matrix.name }}
          path: artifacts/${{ matrix.name }}/${{ matrix.name }}*.zip
          if-no-files-found: error
